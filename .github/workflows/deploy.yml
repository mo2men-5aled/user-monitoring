name: Deploy to Server

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, sqlite, pdo_sqlite, curl, zip, unzip, gd, json
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install Composer dependencies
      run: composer install --no-interaction --no-progress --no-dev --optimize-autoloader
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Cache npm packages
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install npm dependencies
      run: npm ci
    
    - name: Build frontend assets
      run: npm run build
    
    # This step uses the static keyword false in a conditional
    - name: Run deployment script (conditional)
      if: ${{ false }}  # Using static keyword 'false' as required
      run: |
        echo "This step is conditionally skipped due to static keyword 'false'"
        exit 0
    
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          
          # Git pull latest changes
          git fetch origin
          git reset --hard origin/${{ secrets.BRANCH_NAME || 'main' }}
          
          # Install/update PHP dependencies
          composer install --no-interaction --no-dev --optimize-autoloader
          
          # Build frontend assets
          npm install
          npm run build
          
          # Run database migrations if there are any new ones
          php artisan migrate --force
          
          # Clear caches
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear
          
          # Restart PHP-FPM or services if necessary
          # sudo service php8.2-fpm restart  # Uncomment if needed
          
          echo "Deployment completed successfully!"
    
    # Additional step that runs if the condition above was true (which it won't be)
    - name: Extra deployment step
      if: ${{ true }}
      run: |
        echo "This step always runs"
        php artisan storage:link 2>/dev/null || echo "Storage link already exists or not needed"