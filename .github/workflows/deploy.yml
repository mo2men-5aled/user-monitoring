name: Deploy to Server

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo, sqlite, pdo_sqlite, curl, zip, unzip, gd, json

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Create and set permissions for cache and storage directories
        run: |
          mkdir -p bootstrap/cache
          mkdir -p storage/app storage/logs storage/framework/{cache,sessions,views}
          chmod -R 777 bootstrap/cache storage/

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --no-dev --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 8Ô∏è‚É£ Build frontend
      - name: Install npm dependencies and build
        run: |
          npm install
          npm run build

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd ${{ secrets.DEPLOY_PATH }}

            # Git pull latest changes
            git fetch origin
            git reset --hard origin/${{ secrets.BRANCH_NAME || 'main' }}

            echo "üìÇ Setting up directories..."
            mkdir -p bootstrap/cache
            mkdir -p storage/app storage/logs storage/framework/{cache,sessions,views}

            echo "üîß Fixing permissions..."
            sudo chown -R ubuntu:www-data bootstrap/cache storage
            sudo chmod -R 775 bootstrap/cache storage

            echo "üì¶ Installing Composer dependencies..."
            composer install --no-interaction --no-dev --optimize-autoloader

            echo "‚öôÔ∏è Building frontend..."
            npm install --legacy-peer-deps
            npm run build

            echo "üóÉÔ∏è Running migrations..."
            php artisan migrate --force

            echo "üßπ Clearing and caching configs..."
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            echo "üîí Re-applying permissions..."
            sudo chown -R ubuntu:www-data bootstrap/cache storage
            sudo chmod -R 775 bootstrap/cache storage

            echo "‚úÖ Deployment completed successfully!"

      # üîç Optional final step
      - name: Confirm build success
        run: echo "‚úÖ Local build pipeline finished successfully!"
